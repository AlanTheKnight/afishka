{"version":3,"file":"forms.20b9806e.js","sources":["../../src/utils/forms.ts"],"sourcesContent":["import { AxiosError } from \"axios\";\nimport { getFileSize } from \"./files\";\n\nexport interface FormDataField {\n  value: string;\n  checkers?: CustomValidators;\n  transform?: (value: string) => string;\n  errorMessage?: string;\n  validators: Array<keyof typeof inBuiltValidators>;\n  isBound?: boolean;\n}\n\nexport interface CustomValidators {\n  [index: string]: Validator;\n}\n\ninterface InBuiltValidators {\n  required: Validator;\n  email: Validator;\n  slug: Validator;\n  password1: Validator;\n}\n\nexport type FormBuilder = {\n  [key: string]: FormDataField;\n};\n\nexport interface Validator {\n  check: (value: string, data?: FormBuilder) => boolean;\n  errorMessage: string;\n}\n\nexport interface FormFile {\n  type: string;\n  size: number;\n  size_verbose: string;\n  file: File;\n}\n\nexport type FileEventTarget = EventTarget & { files: FileList };\n\ntype Validators = {\n  [index in keyof InBuiltValidators]: InBuiltValidators[index];\n};\n\nexport const inBuiltValidators: Validators = {\n  required: {\n    check: (value: string) => Boolean(value.length),\n    errorMessage: \"Это поле обязательно\",\n  },\n  email: {\n    check: (value: string) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value),\n    errorMessage: \"Некорректный адрес электронной почты\",\n  },\n  slug: {\n    check: (value: string) => /^[a-z0-9-]+$/i.test(value) && value.length > 2,\n    errorMessage: \"Некорректный формат ссылки - используйте только буквы, цифры и тире\",\n  },\n  password1: {\n    check: (value: string) =>\n      Boolean(\n        value.length >= 8 && value.length <= 32 && /[A-Za-z]/i.test(value) && /[0-9]/i.test(value)\n      ),\n    errorMessage: \"Пароль должен быть от 8 до 32 символов, содержать буквы и цифры\",\n  },\n};\n\n/**\n * Validates a field\n * @param data Field to validate\n */\nexport const validateField = (data: FormDataField, state: FormBuilder): boolean => {\n  const { validators, transform, checkers } = data;\n  let value = data.value;\n  data.errorMessage = \"\";\n  const errors: string[] = [];\n\n  // In case data must be transformed before validation\n  if (transform) value = transform(value);\n\n  // Apply inbuilt validators\n  validators.forEach((validator) => {\n    const validatorFunction = inBuiltValidators[validator];\n    if (!validatorFunction.check(value)) {\n      errors.push(validatorFunction.errorMessage);\n    }\n  });\n\n  // Apply custom validators\n  if (checkers) {\n    Object.keys(checkers).forEach((key) => {\n      const validator = checkers[key];\n      if (!validator.check(value, state)) {\n        errors.push(validator.errorMessage);\n      }\n    });\n  }\n\n  data.errorMessage = errors.length ? errors[0] : \"\";\n\n  return errors.length === 0;\n};\n\nexport const validateForm = (data: FormBuilder, makeBound = true): boolean => {\n  let isValid = true;\n  Object.keys(data).forEach((key) => {\n    const res = validateField(data[key], data);\n    // console.log(key, res);\n    isValid = res && isValid;\n    if (makeBound) data[key].isBound = true;\n  });\n  return isValid;\n};\n\n/**\n * Mark every field of a form as bound.\n *\n * @param f A form\n */\nexport const boundForm = (f: FormBuilder): void => {\n  Object.keys(f).forEach((key) => {\n    f[key].isBound = true;\n  });\n};\n\n/**\n * Mark every field of a form as unbound.\n *\n * @param f A form\n */\nexport const unboundForm = (f: FormBuilder): void => {\n  Object.keys(f).forEach((key) => {\n    f[key].isBound = false;\n  });\n};\n\nexport const handleFile = (file: File): FormFile => {\n  return {\n    type: file.type,\n    size: file.size,\n    size_verbose: getFileSize(file.size),\n    file,\n  };\n};\n\nexport const handleFilesEvent = (e: InputEvent): FormFile[] => {\n  const files: FileList = (e.target as FileEventTarget).files;\n  const filesArray: FormFile[] = [];\n  for (let i = 0; i < files.length; i++) {\n    filesArray.push(handleFile(files[i]));\n  }\n  return filesArray;\n};\n\ninterface ErrorRule {\n  [key: string]: (errorTexts?: string[]) => void;\n}\n\ninterface BackendErrorRules {\n  [key: string]: ErrorRule;\n}\n\nexport const handleBackendError = (error: AxiosError, rules: BackendErrorRules): void => {\n  if (!error.response) return;\n  for (const rule in rules) {\n    // Error status code matches a rule\n    if (error.response.status === Number(rule)) {\n      for (const field in rules[rule]) {\n        // Default case\n        if (field.startsWith(\"_\")) continue;\n\n        // Field matches a field in the error\n        if (Object.prototype.hasOwnProperty.call(error.response.data, field)) {\n          rules[rule][field]((error.response.data[field]));\n        }\n      }\n    }\n  }\n};\n"],"names":["inBuiltValidators","value","validateField","data","state","validators","transform","checkers","errors","validator","validatorFunction","key","validateForm","makeBound","isValid","handleBackendError","error","rules","rule","field"],"mappings":"AA6CO,MAAMA,EAAgC,CAC3C,SAAU,CACR,MAAQC,GAAkB,QAAQA,EAAM,MAAM,EAC9C,aAAc,gHAChB,EACA,MAAO,CACL,MAAQA,GAAkB,4CAA4C,KAAKA,CAAK,EAChF,aAAc,2MAChB,EACA,KAAM,CACJ,MAAQA,GAAkB,gBAAgB,KAAKA,CAAK,GAAKA,EAAM,OAAS,EACxE,aAAc,6VAChB,EACA,UAAW,CACT,MAAQA,GACN,QACEA,EAAM,QAAU,GAAKA,EAAM,QAAU,IAAM,YAAY,KAAKA,CAAK,GAAK,SAAS,KAAKA,CAAK,CAC3F,EACF,aAAc,iTAChB,CACF,EAMaC,EAAgB,CAACC,EAAqBC,IAAgC,CACjF,KAAM,CAAE,WAAAC,EAAY,UAAAC,EAAW,SAAAC,CAAA,EAAaJ,EAC5C,IAAIF,EAAQE,EAAK,MACjBA,EAAK,aAAe,GACpB,MAAMK,EAAmB,CAAA,EAGrB,OAAAF,IAAWL,EAAQK,EAAUL,CAAK,GAG3BI,EAAA,QAASI,GAAc,CAChC,MAAMC,EAAoBV,EAAkBS,GACvCC,EAAkB,MAAMT,CAAK,GACzBO,EAAA,KAAKE,EAAkB,YAAY,CAC5C,CACD,EAGGH,GACF,OAAO,KAAKA,CAAQ,EAAE,QAASI,GAAQ,CACrC,MAAMF,EAAYF,EAASI,GACtBF,EAAU,MAAMR,EAAOG,CAAK,GACxBI,EAAA,KAAKC,EAAU,YAAY,CACpC,CACD,EAGHN,EAAK,aAAeK,EAAO,OAASA,EAAO,GAAK,GAEzCA,EAAO,SAAW,CAC3B,EAEaI,EAAe,CAACT,EAAmBU,EAAY,KAAkB,CAC5E,IAAIC,EAAU,GACd,cAAO,KAAKX,CAAI,EAAE,QAASQ,GAAQ,CAGjCG,EAFYZ,EAAcC,EAAKQ,GAAMR,CAAI,GAExBW,EACbD,IAAWV,EAAKQ,GAAK,QAAU,GAAA,CACpC,EACMG,CACT,EAkDaC,EAAqB,CAACC,EAAmBC,IAAmC,CACvF,GAAI,EAACD,EAAM,UACX,UAAWE,KAAQD,EAEjB,GAAID,EAAM,SAAS,SAAW,OAAOE,CAAI,EAC5B,UAAAC,KAASF,EAAMC,GAEpBC,EAAM,WAAW,GAAG,GAGpB,OAAO,UAAU,eAAe,KAAKH,EAAM,SAAS,KAAMG,CAAK,GACjEF,EAAMC,GAAMC,GAAQH,EAAM,SAAS,KAAKG,EAAO,EAKzD"}